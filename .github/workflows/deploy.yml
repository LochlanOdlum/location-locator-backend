name: Build and Deploy to Raspberry Pi

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Push image to GHCR
        run: docker push $IMAGE_NAME:latest

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up SSH
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan -p ${{ secrets.SSH_PORT }}  ${{ secrets.SSH_ADDRESS }} >> ~/.ssh/known_hosts

  #     - name: Deploy to Raspberry Pi
  #       run: |
  #         ssh -p ${{ secrets.SSH_PORT }} "${{ secrets.RASPBERRY_PI_USER }}@${{ secrets.SSH_ADDRESS }}" << 'EOF'
  #           cd /home/${{ secrets.RASPBERRY_PI_USER }}/deployuser/app/${{ github.repository }}
  #           git pull origin main

  #           cat > .env <<EOL
  #           POSTGRES_USER=${{ secrets.POSTGRES_USER }}
  #           POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
  #           AUTH_HASH_SECRET_KEY=${{ secrets.AUTH_HASH_SECRET_KEY }}
  #           OPENROUTESERVICE_API_KEY=${{ secrets.OPENROUTESERVICE_API_KEY }}
  #           EOL

  #           docker compose -f docker-compose.yml -f docker-compose.prod.yml pull
  #           docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
  #         EOF
